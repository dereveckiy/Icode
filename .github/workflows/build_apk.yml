name: Build APK with Buildozer

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y python3-pip build-essential ccache git zip unzip \
          openjdk-17-jdk libstdc++6 zlib1g zlib1g-dev libffi-dev libssl-dev liblzma-dev

        pip install --upgrade pip
        pip install buildozer cython

    - name: Install Android Command-line Tools
      run: |
        mkdir -p $HOME/android/cmdline-tools
        cd $HOME/android
        wget https://dl.google.com/android/repository/commandlinetools-linux-10406996_latest.zip -O cmdline-tools.zip
        unzip cmdline-tools.zip -d cmdline-tools
        mv cmdline-tools/cmdline-tools $HOME/android/cmdline-tools/latest

    - name: Set environment variables
      run: |
        echo "ANDROID_HOME=$HOME/android" >> $GITHUB_ENV
        echo "$HOME/android/cmdline-tools/latest/bin:$HOME/android/platform-tools" >> $GITHUB_PATH

    - name: Accept SDK licenses and install SDK packages
      run: |
        sdkmanager --sdk_root=${ANDROID_HOME} --licenses
        sdkmanager --sdk_root=${ANDROID_HOME} "platform-tools" "platforms;android-33" "build-tools;33.0.2"

    - name: Decode keystore from base64
      run: |
        echo "${{ secrets.KEYSTORE_FILE_BASE64 }}" | base64 --decode > my-release-key.keystore

    - name: Build APK
      env:
        ANDROID_HOME: ${{ env.ANDROID_HOME }}
        KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
        KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
        KEY_ALIAS_PASSWORD: ${{ secrets.KEY_ALIAS_PASSWORD }}
      run: |
        buildozer android release

    - name: Upload APK
      uses: actions/upload-artifact@v3
      with:
        name: release-apk
        path: bin/*.apk
